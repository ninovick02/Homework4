---
title: "Reading Delimited Data"
format: html
toc: TRUE
editor_options: 
  chunk_output_type: console
---

## Task 2 Reading Delimited Data

Load in necessary libraries
```{r}
library(tidyverse)
```

### Glass Data

- Variables:

  - ID RI Na Mg Al Si K Ca Ba Fe Type_of_glass
  
Read in data
```{r}
# Code is Comma Delimited
glass_tbl <- read_csv("https://www4.stat.ncsu.edu/online/datasets/glass.data", col_names = c("ID", "RI", "Na", "Mg", "Al", "Si", "K", "Ca", "Ba", "Fe", "Type_of_glass"))

glass_tbl
```

Start a chain that would overwrite the Type_of_glass variable using mutate(). Create a character
string version with meaningful names. Think if/then/else via ifelse().  Continue your chain and keep only observations where the Fe variable is less than 0.2 and the Type of Glass is either “tableware” or “headlamps”.
```{r}
glass_tbl <- glass_tbl |> 
  mutate(Type_of_glass = ifelse(Type_of_glass == 1, "building_windows_float_processed",
                          ifelse(Type_of_glass == 2, "building_windows_non_float_processed", 
                           ifelse(Type_of_glass == 3, "vehicle_windows_float_processed", 
                            ifelse(Type_of_glass == 4, "vehicle_windows_non_float_processed", 
                             ifelse(Type_of_glass == 5, "containers", 
                              ifelse(Type_of_glass == 6, "tableware", 
                               ifelse(Type_of_glass == 7, "headlamps", "Not a meaningful type of glass")))))))
  ) |> 
  filter(Fe < .2, Type_of_glass %in% c("tableware", "headlamps"))

```


### Yeast data

Read in data
```{r}
# Fixed width data
yeast_tbl <- read_fwf("https://www4.stat.ncsu.edu/~online/datasets/yeast.data",
         fwf_widths(c(12, 6, 6, 6, 6, 6, 6, 6, 6, 3),
                    c("seq_name", "mcg", "gvh", "alm", "mit", "erl", "pox", "vac", "nuc", "class")))

yeast_tbl
```

Start a chain that removes the seq_name and nuc columns.
Continue your chain to add columns corresponding to the mean and median of each numeric variable (mcg, gvh, alm, mit, erl, pox, and vac) at each class grouping (see the across() function as we did in the dplyr video!).
```{r}
yeast_tbl <- yeast_tbl |> 
  select(!seq_name, !nuc) |> 
  group_by(class) |> 
  mutate(across(where(is.numeric), 
                .fns = list(mean = mean, median = median), 
                .names = "{.col}_{.fn}"))
```

